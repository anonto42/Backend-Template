services:

  application:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: application
    hostname: application
    env_file:
      - .env
    volumes:
      - shared-data:/shared
    ports:
      - "${PORT}:${PORT}"
    networks:
      - server-net
    depends_on:
      - mongo

  mongo:
    container_name: mongo
    image: mongo
    env_file:
      - .env 
    environment:
      - MONGO_INITDB_ROOT_USERNAME=${MONGODB_ADMINUSERNAME}
      - MONGO_INITDB_ROOT_PASSWORD=${MONGODB_ADMINPASSWORD}
      - MONGO_INITDB_DATABASE=${DATABASE_NAME}
    volumes:
      - shared-data:/shared
    ports:
      - "${MONGODB_PORT}:27017"
    networks:
      - server-net

  mongo_express:
    image: mongo-express:1.0.2-20-alpine3.19
    env_file:
      - .env 
    environment:
      - ME_CONFIG_MONGODB_SERVER=mongo
      - ME_CONFIG_MONGODB_PORT=${MONGODB_PORT}
      - ME_CONFIG_MONGODB_ADMINUSERNAME=${MONGODB_ADMINUSERNAME}
      - ME_CONFIG_MONGODB_ADMINPASSWORD=${MONGODB_ADMINPASSWORD}
      - ME_CONFIG_BASICAUTH_USERNAME=${WEB_INTERFACE_USERNAME}
      - ME_CONFIG_BASICAUTH_PASSWORD=${WEB_INTERFACE_PASSWORD}
    ports:
      - "${DATABASE_WEB_INTERFACE_PORT}:3000"
    depends_on:
      - mongo
    networks:
      - server-net

  nginx:
    build: 
      context: .
      dockerfile: Dockerfile.nginx
    container_name: nginx
    hostname: nginx
    env_file:
      - .env 
    environment:
      - PORT=${PORT}
    volumes:
      - shared-data:/shared
    ports:
      - "80:80"
    depends_on:
      - application
    networks:
      - server-net

networks:
  server-net:

volumes:
  shared-data: