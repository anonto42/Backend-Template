services:
  application:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: application
    hostname: application
    ports:
      - "3000:3000"
    networks:
      - example-network
    depends_on:
      - mongo
  mongo:
    container_name: mongo
    image: mongo
    volumes:
      - ./data:/data/db
    ports:
      - "27017:27017"
    networks:
      - example-network
  nginx:
    build: 
      context: .
      dockerfile: Dockerfile.nginx
    container_name: nginx
    hostname: nginx
    ports:
      - "80:80"
    depends_on:
      - application
    networks:
      - example-network

networks:
  example-network:
    # external: true



# services:
#   # mongo:
#   #   image: mongo
#   #   container_name: mongo
#   #   ports:
#   #     - "${MONGODB_PORT}:27017"
#   #   env_file:
#   #     - .env 
#   #   environment:
#   #     - MONGO_INITDB_ROOT_USERNAME=${MONGODB_ADMINUSERNAME}
#   #     - MONGO_INITDB_ROOT_PASSWORD=${MONGODB_ADMINPASSWORD}
#   #     - MONGO_INITDB_DATABASE=${DATABASE_NAME}
#   #   volumes:
#   #     - mongo-data:/data/db
#   #   networks:
#   #     - server

#   mongo:
#     image: mongo
#     ports:
#       - "27017:27017"
#     healthcheck:
#       test: ["CMD", "mongo", "--eval", "db.adminCommand('ping')"]
#       interval: 10s
#       timeout: 5s
#       retries: 5


#   # mongo_express:
#   #   image: mongo-express:1.0.2-20-alpine3.19
#   #   env_file:
#   #     - .env 
#   #   environment:
#   #     - ME_CONFIG_MONGODB_SERVER=mongo
#   #     - ME_CONFIG_MONGODB_PORT=${MONGODB_PORT}
#   #     - ME_CONFIG_MONGODB_ADMINUSERNAME=${MONGODB_ADMINUSERNAME}
#   #     - ME_CONFIG_MONGODB_ADMINPASSWORD=${MONGODB_ADMINPASSWORD}
#   #   ports:
#   #     - "${DATABASE_WEB_INTERFACE_PORT}:8081"
#   #   depends_on:
#   #     - mongo
#   #   networks:
#   #     - server

#   mongo-express:
#     image: mongo-express
#     ports:
#       - "8081:8081"
#     environment:
#       ME_CONFIG_MONGODB_SERVER: mongo
#       ME_CONFIG_MONGODB_PORT: 27017
#     depends_on:
#       - mongo
#     restart: always


#   app:
#     build:
#       context: .
#       dockerfile: Dockerfile
#     container_name: express_app
#     env_file:
#       - .env 
#     expose:
#       - "${PORT}"
#     ports:
#       - "${HOST_PORT}:${PORT}"
#     depends_on:
#       - mongo

#   nginx:
#     image: nginx:alpine
#     container_name: nginx
#     ports:
#       - "80:80"
#     volumes:
#       - ./nginx/default.conf:/etc/nginx/conf.d/default.conf:ro
#     depends_on:
#       - app
#     networks:
#       - server

# volumes:
#   mongo-data:

# # Wone network
# networks:
#   server:
#     driver: bridge